---
title: Explore Annual Maximum daily Precipitation in Brazil
author: To be defined
html-table-processing: none
---

```{r}
#| echo: false
#| warning: false

library(tidyverse)
library(lubridate)
library(gt)
require(knitr)
```


O código abaixo lê o arquivo original gerado pelo Eng. Saulo Aires de Souza, que contém os valores das precipitações máximas diárias e respectivos anos. Esse código só deve ser gerado de novo caso um novo arquivo original seja atualizado. Caso contrário, deve-se utilizar o arquivo RDS contido no diretório.

```{r}
#| label: generate-main-dataframe
#| echo: true
#| eval: false
#| warning: false
# Code written by Thiago Lappicy with comments by Dirceu Reis

# Extract metadata only (first 15 lines)
Pd_metadata <-
  read.csv("DADOS_CONV_SAULO.dat", header = FALSE, sep = ";",
           nrows = 15, dec = ".",na.strings = "null",
           fileEncoding = "latin1") #,
           #colClasses = c("integer",
          #                "integer","integer","numeric",
           #               "numeric", "numeric","numeric",
            #              "integer","char","char",
             #             "char","char","char",
              #            "char","char"))

# Extract Dates and Annual Maximum Daily Precipitation (20th to 112nd lines)
Pd_tmp <-
  read.csv("DADOS_CONV_SAULO.dat", header = TRUE, sep = ";",
           skip = 20, dec = ".", na.strings = "null")

# Create an empty dataframe with the correct columns
Pd <- as.data.frame(matrix(data = NA, nrow = 0, ncol = 17))   

# Name the columns
colnames(Pd) <- c("Date", "Pdmax", Pd_metadata[,1])

# Combine both dataframes with only one column for "Data" and one for "Pdmax"
# Obs: the original file contains one column in excess. That is why we use 
# "to = ncol(Pd_metadata) - 1" in the function "seq" below

for(i in seq(from = 1, to = ncol(Pd_metadata) - 1, by = 2)){
  
  # Printar uma mensagem a cada 500 estações pra ter certeza que ta rodando
  if((i+1) %% 500 == 0) cat("Rodando iteração: ", i+1, "...\n")
  
  # Include the metadata contained in Pd_metadata
  # Get only the second column of station "i" and transpose the whole column
  # so it becomes a line with metadata
  metadata_proxy <- as.data.frame(t(Pd_metadata[,(i+1)])) 
  # Copy metadata to all possible observations (max.number.observations = 112)
  metadata_proxy[1:112,] <- metadata_proxy
  # Name the column
  colnames(metadata_proxy) <- Pd_metadata[,1]
  
  # Include the annual maximum daily Precip and Date (Date + Pdmax + Metadata)
  Pd[(nrow(Pd)+1):(nrow(Pd)+nrow(Pd_tmp)),] <-
    cbind(Pd_tmp[,c(i, i+1)], metadata_proxy)
  
}


# Zerar as linhas que tem valores NAs de Data E valor (2 terços +-)
# 425600 pra 156529
Pd <- Pd[-which(is.na(Pd$Pdmax) & is.na(Pd$Date)),]

Pd <- Pd %>%
    mutate( Date = as.Date(Date,"%d/%m/%Y"),
            BaciaCodigo = as.integer(BaciaCodigo),
            SubBaciaCodigo = as.integer(SubBaciaCodigo),
            Estacao_codigo = as.integer(Estacao_codigo),
            Latitude = as.numeric(Latitude),
            Longitude = as.numeric(Longitude),
            Altitude = as.numeric(Altitude))



saveRDS(Pd, "Pd.rds")

rm(metadata_proxy)
rm(Pd_metadata)
rm(Pd_tmp)
```

```{R}
#| label: gera-resumo-dados  
#| echo: true

# Load the data
Pd <- readRDS("Pd.rds")

# Create a new column with the year of the observation right after the date
Pd <- Pd %>% mutate(Ano = year(Date), .after = Date)

n_stations_year <- Pd %>% 
  count(Ano)

n_stations_year_bacia <- Pd %>% 
  count(Ano,BaciaCodigo)

record_length_station <- Pd %>% #select(c(4,6:8)) %>%
  group_by(Estacao_codigo,BaciaCodigo) %>%
  summarise(n = n())

Tab_resumo_RL <- record_length_station %>%
  group_by(BaciaCodigo) %>%
  summarise(min = min(n),
            Q10 = floor(quantile(n,probs = 0.10)),
            Q25 = floor(quantile(n,probs = 0.25)),
            median = quantile(n,probs = 0.50),
            Q75 = floor(quantile(n,probs = 0.75)),
            Q90 = floor(quantile(n,probs = 0.90)),
            max = max(n),
            media = mean(n))




```


Criando uma Tabela para o resumo do tamanho das séries

```{r}
#| label: tbl-record-length-statistics
#| tbl-cap: "Resumo das estatísticas do tamanho das séries históricas das estações Plu por bacia hidrográfica"
#| tab-alt: "Resumo estatístico"
#| echo: false
#| output: true

# Create a display table showing ten of
# the largest islands in the world
gt_tbl <- gt(Tab_resumo_RL,rowname_col = "BaciaCodigo") %>%
    tab_header(
    title = "Resumo estatístico do tamanho das séries históricas",
    subtitle = "Informação por bacia hidrográfica"
  ) %>%
  tab_source_note(
    source_note = "Fonte dos dados: Hidroweb da ANA (2023)."
  ) %>%
   tab_stubhead(label = "Bacia") %>%
  tab_spanner(
    label = "Tamanho da série (n)",
    columns = c(min, Q10, Q25, median, Q75, Q90, max, media)
  ) %>%
   cols_label(
    Q10 = html("n<sub>10</sub>"),
    Q25 = html("n<sub>25</sub>"),
    median = html("n<sub>median</sub>"),
    Q75 = html("n<sub>75</sub>"),
    Q90 = html("n<sub>90</sub>")
   )
    
    
# Show the gt Table
gt_tbl

```

```{r}
#| label: fig-number-stations
#| fig-cap: "Número de estações Plu no Brasil"
#| fig-alt: "Estações Plu no Brasil com disponibilidade de chuvas diárias."

# Criação de plotagem do número de estações com valores diários de precipitação
# ao longo dos anos.

ggplot() +
  geom_line(data = n_stations_year,aes(Ano,n),colour = 'black', size = 1) +
   labs(title = "Chuva Máxima Diária no Brasil", subtitle = "Número de estações",
       caption = "fonte dos dados: ANA (2022)",
       x = "Datas", y = "Estações") +
  theme_bw()
  
```


```{r}
#| label: fig-number-stations-bacia
#| fig-cap: "Número de estações Plu no Brasil por Bacia"
#| fig-alt: "Estações Plu no Brasil com disponibilidade de chuvas diárias."

# Criação de plotagem do número de estações, por bacia hidrográfica, com valores
# diários de precipitação ao longo dos anos.

ggplot() +
  geom_line(data = n_stations_year_bacia,aes(Ano,n,color = as.factor(BaciaCodigo))) +
   labs(title = "Chuva Máxima Diária no Brasil", subtitle = "Número de estações por bacia",
       caption = "fonte dos dados: ANA (2022)",
       x = "Datas", y = "Estações", col = "Bacia") +
  theme_bw()
  
```

```{r}
#| label: fig-cdf_record-length
#| fig-cap: "Distribuição de probabilidades acumuladas do tamanho de séries históricas das estações pluviométricas no Brasil"
#| fig-alt: "Estações Plu no Brasil com disponibilidade de chuvas diárias."


# Criação de plotagem do número de estações, por bacia hidrográfica, com valores
# diários de precipitação ao longo dos anos.

ggplot() +
  geom_line(data = n_stations_year_bacia,aes(Ano,n,col = BaciaCodigo), size = 1) +
   labs(title = "Chuva Máxima Diária no Brasil", subtitle = "Número de estações por bacia",
       caption = "fonte dos dados: ANA (2022)",
       x = "Datas", y = "Estações", col = "Bacia") +
  theme_bw()
  
```
